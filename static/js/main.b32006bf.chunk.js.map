{"version":3,"sources":["tasks/addTask.js","tasks/taskTablet.js","tasks/tasks.js","calendar/monthSwithcer.js","calendar/monthDaysTablets.js","calendar/calendar.js","organaizer.js","index.js"],"names":["AddTask","props","state","isShowAddField","addTimeFrom","addTimeTo","addText","toggleShowAddField","bind","handleInputsAddField","cleanState","handleAddButton","this","setState","nameInput","event","_emptyTextError","classList","remove","target","value","addTask","selectedDate","add","id","onClick","style","maxHeight","type","onChange","className","ref","dom","Component","TaskTablet","text","timeFrom","timeTo","removeTask","idx","Tasks","getDate","getTaskTablets","year","month","day","tasks","map","task","key","MonthSwitcher","nameOfMounth","handlePrevUpdate","prevMonth","selectedMonth","selectedYear","handleNextUpdate","nextMonth","MonthDaysTablets","nameDaysOfWeek","daysArr","elem","dayOfWeek","isActive","isSelectedDate","numberOfTasks","setNewSelectedDate","e","preventDefault","getDaysTablets","Calendar","Organaizer","date","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","currentDayOfWeek","getDay","getPrevMonth","getNextMonth","JSON","parse","localStorage","getItem","updateDateNext","updateDatePrev","window","addEventListener","setItem","stringify","hiddenCalendar","document","querySelector","opacity","setTimeout","getNextYear","getDaysArr","getPrevYear","numOfDays","getNumOfDays","getDatePrevMonth","getDateSelectedMonth","getDateNextMonth","arr","push","getDayOfWeek","getNumberOfTasks","numFirstDay","lastDayOfPrevMonth","deltaDays","reverse","numLastDay","y","m","d","hiddenTasks","length","newTasks","data","returnDateExist","taskData","sort","sortOnTimeFrom","tasksObj","undefined","a","b","split","aHours","aMinutes","bHours","bMinutes","splice","deleteEmptyTasks","objTasks","Object","keys","ReactDOM","render","getElementById"],"mappings":"6QAEqBA,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,gBAAgB,EAChBC,YAAa,GACbC,UAAW,GACXC,QAAS,IAGb,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,gBAAkB,EAAKA,gBAAgBH,KAArB,gBAZR,E,kFAgBfI,KAAKC,SAAS,CACVV,gBAAiBS,KAAKV,MAAMC,mB,2CAIfW,EAAWC,GAC5BH,KAAKI,gBAAgBC,UAAUC,OAAO,QAEtCN,KAAKC,SAAL,eACKC,EAAYC,EAAMI,OAAOC,U,wCAKH,KAAvBR,KAAKV,MAAMI,SAIfM,KAAKX,MAAMoB,QAAQT,KAAKX,MAAMqB,aAAcV,KAAKV,OACjDU,KAAKL,qBACLK,KAAKF,cALDE,KAAKI,gBAAgBC,UAAUM,IAAI,U,mCASvCX,KAAKC,SAAS,CACVV,gBAAiBS,KAAKV,MAAMC,eAC5BC,YAAa,GACbC,UAAW,GACXC,QAAS,O,+BAIP,IAAD,OACL,OAAO,yBAAKkB,GAAG,WACX,yBAAKA,GAAG,iBACJ,4BAAQC,QAASb,KAAKL,oBAAtB,yFAA0D,qCAE9D,yBAAKiB,GAAG,eAAeE,MAAO,CAACC,UAAWf,KAAKV,MAAMC,eAAiB,QAAU,MAC5E,yBAAKqB,GAAG,YAAR,qCACa,2BACDI,KAAK,OACLR,MAAOR,KAAKV,MAAME,YAClByB,SAAUjB,KAAKH,qBAAqBD,KAAK,KAAM,iBAJ3D,gBAMO,2BACKoB,KAAK,OACLR,MAAOR,KAAKV,MAAMG,UAClBwB,SAAUjB,KAAKH,qBAAqBD,KAAK,KAAM,gBAG3D,yBAAKgB,GAAG,YAAR,yCACY,2BACJI,KAAK,OACLR,MAAOR,KAAKV,MAAMI,QAClBuB,SAAUjB,KAAKH,qBAAqBD,KAAK,KAAM,cAGvD,yBAAKgB,GAAG,iBAAiBM,UAAU,UAC/B,uBAAGC,IAAK,SAACC,GAAD,OAAS,EAAKhB,gBAAkBgB,IAAxC,qIAEJ,yBAAKR,GAAG,qBACJ,4BAAQC,QAASb,KAAKD,iBAAtB,oDACA,4BAAQc,QAASb,KAAKF,YAAtB,+C,GA/EiBuB,aCChBC,E,iLACP,IAAD,EAC4BtB,KAAKX,MAA/BkC,EADF,EACEA,KAAMC,EADR,EACQA,SAAUC,EADlB,EACkBA,OAEvB,OAAO,wBAAIP,UAAU,cACjB,yBAAKA,UAAU,YACVM,EAAW,uBAAGN,UAAU,YAAb,UAA4BM,EAA5B,YAAwCC,IAAgB,GACpE,uBAAGP,UAAU,YAAYK,IAE7B,yBACIL,UAAU,aACVL,QAASb,KAAKX,MAAMqC,WAAW9B,KAAK,KAAMI,KAAKX,MAAMqB,aAAcV,KAAKX,MAAMsC,MAFlF,e,GAT4BN,aCCnBO,E,YACjB,WAAYvC,GAAQ,IAAD,8BACf,4CAAMA,KAEDwC,QAAU,EAAKA,QAAQjC,KAAb,gBACf,EAAKkC,eAAiB,EAAKA,eAAelC,KAApB,gBAJP,E,uEAOR,IAAD,EACqBI,KAAKX,MAAMqB,aAA/BqB,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,IACpB,MAAM,GAAN,OAAUA,EAAV,YAAiBD,EAAQ,EAAIA,EAAQ,EAAI,KAAOA,EAAQ,GAAxD,YAA8DD,K,uCAGhD,IAAD,OACPG,EAAQlC,KAAKX,MAAM6C,MADZ,EAEclC,KAAKX,MAAMqB,aAA/BqB,EAFM,EAENA,KAAMC,EAFA,EAEAA,MAAOC,EAFP,EAEOA,IAEpB,OAAKC,EAAMH,IAAUG,EAAMH,GAAMC,IAAWE,EAAMH,GAAMC,GAAOC,GAOpDC,EAAMH,GAAMC,GAAOC,GAAKE,KAAI,SAACC,EAAMT,GAAS,IACxCJ,EAA0Ba,EAA1Bb,KAAMC,EAAoBY,EAApBZ,SAAUC,EAAUW,EAAVX,OACvB,OAAO,kBAAC,EAAD,CACHY,IAAKV,EACLA,IAAKA,EACLJ,KAAMA,EACNC,SAAUA,EACVC,OAAQA,EACRC,WAAc,EAAKrC,MAAMqC,WACzBhB,aAAgB,EAAKrB,MAAMqB,kBAf5B,wBAAIQ,UAAU,cACjB,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAb,gBAA2B,8BAAOlB,KAAK6B,WAAvC,0D,+BAoBZ,OAAO,6BAASjB,GAAG,SACf,yBAAKA,GAAG,eACJ,yBAAKA,GAAG,cACJ,mEACA,2BAAIZ,KAAK6B,YAEb,kBAAC,EAAD,CACInB,aAAgBV,KAAKX,MAAMqB,aAC3BD,QAAWT,KAAKX,MAAMoB,UAE1B,wBAAIG,GAAG,eACFZ,KAAK8B,wB,GAnDST,aCFdiB,E,YACjB,WAAYjD,GAAQ,IAAD,8BACf,4CAAMA,KACDkD,aAAe,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,2BAAQ,uCAAU,mDAAY,6CAAW,uCAAU,8CAF/G,E,sEAMf,OAAO,yBAAK3B,GAAG,kBACX,yBAAKM,UAAU,WAAWL,QAASb,KAAKX,MAAMmD,kBAC1C,mCADJ,SAEKxC,KAAKuC,aAAavC,KAAKX,MAAMoD,WAFlC,SAGkC,IAA7BzC,KAAKX,MAAMqD,cAAsB1C,KAAKX,MAAMsD,aAAe,EAAI,IAEpE,yBAAK/B,GAAG,gBACJ,6BAAMZ,KAAKuC,aAAavC,KAAKX,MAAMqD,gBACnC,6BAAM1C,KAAKX,MAAMsD,eAErB,yBAAKzB,UAAU,WAAWL,QAASb,KAAKX,MAAMuD,kBACZ,KAA7B5C,KAAKX,MAAMqD,cAAuB1C,KAAKX,MAAMsD,aAAe,EAAI,GADrE,SAEK3C,KAAKuC,aAAavC,KAAKX,MAAMwD,WAFlC,SAGI,yC,GApB2BxB,aCAtByB,E,YACjB,aAAe,IAAD,8BACV,+CACKC,eAAiB,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAFjD,E,8EAKI,IAAD,OACb,OAAO/C,KAAKX,MAAM2D,QAAQb,KAAI,SAACc,EAAMtB,GAAS,IACnCM,EAA2DgB,EAA3DhB,IAAKiB,EAAsDD,EAAtDC,UAAWC,EAA2CF,EAA3CE,SAAUC,EAAiCH,EAAjCG,eAAgBC,EAAiBJ,EAAjBI,cAEjD,OAAO,yBACHhB,IAAKV,EACLT,UAAWiC,EAAYC,EAAiB,eAAiB,SAAY,YACrEvC,QAASsC,EACL,EAAK9D,MAAMiE,mBAAmB1D,KAAK,KAAM,EAAKP,MAAMsD,aAAc,EAAKtD,MAAMqD,cAAeT,GAC5F,SAACsB,GAAD,OAAOA,EAAEC,mBAGb,2BAAI,EAAKT,eAAeG,IACxB,2BAAIjB,GACJ,2BAAIoB,EAAa,0CAAaA,GAAkB,U,+BAMxD,OAAO,yBAAKzC,GAAG,cACVZ,KAAKyD,sB,GA3B4BpC,aCEzBqC,E,iLAEb,OAAO,6BAAS9C,GAAG,YACf,yBAAKA,GAAG,kBACJ,kBAAC,EAAD,CACI+B,aAAgB3C,KAAKX,MAAMsD,aAC3BD,cAAiB1C,KAAKX,MAAMqD,cAC5BD,UAAazC,KAAKX,MAAMoD,UACxBI,UAAa7C,KAAKX,MAAMwD,UACxBD,iBAAoB5C,KAAKX,MAAMuD,iBAC/BJ,iBAAoBxC,KAAKX,MAAMmD,mBAEnC,kBAAC,EAAD,CACIQ,QAAWhD,KAAKX,MAAM2D,QACtBL,aAAgB3C,KAAKX,MAAMsD,aAC3BD,cAAiB1C,KAAKX,MAAMqD,cAC5BY,mBAAsBtD,KAAKX,MAAMiE,2B,GAhBfjC,aCAjBsC,E,YACnB,aAAe,IAAD,8BACZ,+CACKC,KAAO,IAAIC,KAChB,EAAKC,YAAc,EAAKF,KAAKG,cAC7B,EAAKC,aAAe,EAAKJ,KAAKK,WAC9B,EAAKC,WAAa,EAAKN,KAAK/B,UAC5B,EAAKsC,iBAAmB,EAAKP,KAAKQ,SAElC,EAAK9E,MAAQ,CACXqD,aAAc,EAAKmB,YACnBpB,cAAe,EAAKsB,aACpBvB,UAAW,EAAK4B,aAAa,EAAKL,cAClCnB,UAAW,EAAKyB,aAAa,EAAKN,cAClCtD,aAAc,CACZqB,KAAM,EAAK+B,YACX9B,MAAO,EAAKgC,aACZ/B,IAAK,EAAKiC,YAEZhC,MACgD,OAA9CqC,KAAKC,MAAMC,aAAaC,QAAQ,UAC5B,GACAH,KAAKC,MAAMC,aAAaC,QAAQ,WAGxC,EAAK9B,iBAAmB,EAAKA,iBAAiBhD,KAAtB,gBACxB,EAAK4C,iBAAmB,EAAKA,iBAAiB5C,KAAtB,gBACxB,EAAK+E,eAAiB,EAAKA,eAAe/E,KAApB,gBACtB,EAAKgF,eAAiB,EAAKA,eAAehF,KAApB,gBACtB,EAAKwD,eAAiB,EAAKA,eAAexD,KAApB,gBACtB,EAAK0D,mBAAqB,EAAKA,mBAAmB1D,KAAxB,gBAC1B,EAAKa,QAAU,EAAKA,QAAQb,KAAb,gBACf,EAAK8B,WAAa,EAAKA,WAAW9B,KAAhB,gBAElBiF,OAAOC,iBAAiB,UAAU,WAChCL,aAAaM,QAAQ,QAASR,KAAKS,UAAU,EAAK1F,MAAM4C,WAlC9C,E,gFAsCM,IAAD,OACX+C,EAAiBC,SAASC,cAAc,mBAC9CF,EAAenE,MAAMsE,QAAU,EAC/BC,YAAW,WACT,EAAKV,iBACLU,YAAW,WACTJ,EAAenE,MAAMsE,QAAU,IAC9B,OACF,O,yCAGe,IAAD,OACXH,EAAiBC,SAASC,cAAc,mBAC9CF,EAAenE,MAAMsE,QAAU,EAC/BC,YAAW,WACT,EAAKT,iBACLS,YAAW,WACTJ,EAAenE,MAAMsE,QAAU,IAC9B,OACF,O,uCAIH,IAAMzC,EAAe3C,KAAKsF,YAAYtF,KAAKV,MAAMqD,aAAc3C,KAAKV,MAAMoD,eACpEA,EAAgB1C,KAAKsE,aAAatE,KAAKV,MAAMoD,eAEnD1C,KAAKC,SAAS,CACZ0C,aAAcA,EACdD,cAAeA,EACfD,UAAWzC,KAAKqE,aAAa3B,GAC7BG,UAAW7C,KAAKsE,aAAa5B,GAC7BM,QAAShD,KAAKuF,WAAW5C,EAAcD,O,uCAKzC,IAAMC,EAAe3C,KAAKwF,YAAYxF,KAAKV,MAAMqD,aAAc3C,KAAKV,MAAMoD,eACpEA,EAAgB1C,KAAKqE,aAAarE,KAAKV,MAAMoD,eAEnD1C,KAAKC,SAAS,CACZ0C,aAAcA,EACdD,cAAeA,EACfD,UAAWzC,KAAKqE,aAAa3B,GAC7BG,UAAW7C,KAAKsE,aAAa5B,GAC7BM,QAAShD,KAAKuF,WAAW5C,EAAcD,O,kCAI/BC,EAAcD,GACxB,OAAyB,IAAlBA,EAAsBC,EAAe,EAAIA,I,kCAGtCA,EAAcD,GACxB,OAAyB,KAAlBA,EAAuBC,EAAe,EAAIA,I,mCAGtCD,GACX,OAAyB,IAAlBA,EAAsB,GAAKA,EAAgB,I,mCAGvCA,GACX,OAAyB,KAAlBA,EAAuB,EAAIA,EAAgB,I,iCAGzCC,EAAcD,GACvB,IAAM+C,EAAYzF,KAAK0F,aAAa/C,EAAcD,GAElD,MAAM,GAAN,mBACK1C,KAAK2F,iBAAiBhD,EAAcD,IADzC,YAEK1C,KAAK4F,qBAAqBjD,EAAcD,EAAe+C,IAF5D,YAGKzF,KAAK6F,iBAAiBlD,EAAcD,EAAe+C,O,mCAI7C9C,EAAcD,GACzB,OAAO,IAAImB,KAAKlB,EAAcD,EAAgB,EAAG,GAAGb,Y,mCAGzCc,EAAcD,EAAehC,GACxC,OAAO,IAAImD,KAAKlB,EAAcD,EAAehC,GAAc0D,W,2CAGxCzB,EAAcD,EAAe+C,GAGhD,IAFA,IAAIK,EAAM,GAEDlC,EAAO,EAAGA,GAAQ6B,EAAW7B,IACpCkC,EAAIC,KAAK,CACP9D,IAAK2B,EACLV,UAAWlD,KAAKgG,aAAarD,EAAcD,EAAekB,GAC1DT,UAAU,EACVC,eAAgBpD,KAAKoD,eAAeT,EAAcD,EAAekB,GACjEP,cAAerD,KAAKiG,iBAAiBtD,EAAcD,EAAekB,KAItE,OAAOkC,I,uCAGQnD,EAAcD,GAQ7B,IAPA,IAAMwD,EAAc,IAAIrC,KAAKlB,EAAcD,EAAe,GAAG0B,SACvD+B,EAAqB,IAAItC,KAAKlB,EAAcD,EAAe,GAAGb,UAG9DuE,EAAYD,GAAsC,IAAhBD,EAAoB,EAAIA,GAAe,EAC3EJ,EAAM,GAEDlC,EAAOuC,EAAoBvC,EAAOwC,EAAWxC,IACpDkC,EAAIC,KAAK,CACP9D,IAAK2B,EACLV,UAAWlD,KAAKgG,aACdhG,KAAKwF,YAAY7C,EAAcD,GAC/B1C,KAAKqE,aAAa3B,GAClBkB,GAEFT,UAAU,EACVC,gBAAgB,EAChBC,cAAerD,KAAKiG,iBAClBjG,KAAKwF,YAAY7C,EAAcD,GAC/B1C,KAAKqE,aAAa3B,GAClBkB,KAKN,OAAOkC,EAAIO,Y,uCAGI1D,EAAcD,EAAe+C,GAO5C,IANA,IAAMa,EAAa,IAAIzC,KAAKlB,EAAcD,EAAe+C,GAAWrB,SAG9DgC,EAA2B,IAAfE,EAAmB,EAAI,EAAIA,EACzCR,EAAM,GAEDlC,EAAO,EAAGA,GAAQwC,EAAWxC,IACpCkC,EAAIC,KAAK,CACP9D,IAAK2B,EACLV,UAAWlD,KAAKgG,aACdhG,KAAKsF,YAAY3C,EAAcD,GAC/B1C,KAAKsE,aAAa5B,GAClBkB,GAEFT,UAAU,EACVC,gBAAgB,EAChBC,cAAerD,KAAKiG,iBAClBjG,KAAKsF,YAAY3C,EAAcD,GAC/B1C,KAAKsE,aAAa5B,GAClBkB,KAKN,OAAOkC,I,qCAGM/D,EAAMC,EAAOC,GAAM,IAAD,EACOjC,KAAKV,MAAMoB,aAAnC6F,EADiB,EACvBxE,KAAgByE,EADO,EACdxE,MAAeyE,EADD,EACJxE,IAC3B,OAAOF,IAASwE,GAAKvE,IAAUwE,GAAKvE,IAAQwE,I,yCAG3B1E,EAAMC,EAAOC,GAAM,IAAD,OAC7ByE,EAAcxB,SAASC,cAAc,gBAC3CuB,EAAY5F,MAAMsE,QAAU,EAE5BC,YAAW,WACT,EAAKpF,SAAS,CACZS,aAAc,CAAEqB,OAAMC,QAAOC,SAG/BoD,YAAW,WACTqB,EAAY5F,MAAMsE,QAAU,IAC3B,OACF,O,uCAGYrD,EAAMC,EAAOC,GAC5B,IAAMC,EAAQlC,KAAKV,MAAM4C,MAEzB,OAAKA,EAAMH,IAAUG,EAAMH,GAAMC,IAAWE,EAAMH,GAAMC,GAAOC,GAExDC,EAAMH,GAAMC,GAAOC,GAAK0E,OAF6C,O,mCAKV,IAA1D5E,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,IAASvC,EAAmC,EAAnCA,QAASF,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,UAChDmH,EAAWrC,KAAKC,MAAMD,KAAKS,UAAUhF,KAAKV,MAAM4C,QAEhD2E,EAAO7G,KAAK8G,gBAAgBF,EAAU7E,EAAMC,EAAOC,GACjD8E,EAAW,CACfxF,KAAM7B,EACN8B,SAAUhC,EACViC,OAAQhC,GAGVoH,EAAKd,KAAKgB,GACVF,EAAKG,KAAKhH,KAAKiH,gBAEfjH,KAAKC,SAAS,CACZiC,MAAO0E,M,sCAIKM,EAAUnF,EAAMC,EAAOC,GAerC,YAduBkF,IAAnBD,EAASnF,GACXmF,EAASnF,GAAT,eACGC,EADH,eAEKC,EAAM,UAGwBkF,IAA1BD,EAASnF,GAAMC,GACxBkF,EAASnF,GAAMC,GAAf,eACGC,EAAM,SAE+BkF,IAA/BD,EAASnF,GAAMC,GAAOC,KAC/BiF,EAASnF,GAAMC,GAAOC,GAAO,IAGxBiF,EAASnF,GAAMC,GAAOC,K,qCAGhBmF,EAAGC,GAAI,IAAD,EACQD,EAAE5F,SAAS8F,MAAM,KADzB,mBACZC,EADY,KACJC,EADI,OAEQH,EAAE7F,SAAS8F,MAAM,KAFzB,mBAEZG,EAFY,KAEJC,EAFI,KAInB,OAAKH,KAAYE,EACRD,EAAWE,EAEXH,EAASE,I,mCAIa9F,GAAM,IAA1BI,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,IACpB2E,EAAWrC,KAAKC,MAAMD,KAAKS,UAAUhF,KAAKV,MAAM4C,QAEpD0E,EAAS7E,GAAMC,GAAOC,GAAK0F,OAAOhG,EAAK,GACvC3B,KAAK4H,iBAAiBhB,EAAU7E,EAAMC,EAAOC,GAE7CjC,KAAKC,SAAS,CACZiC,MAAO0E,M,uCAIMiB,EAAU9F,EAAMC,EAAOC,GACI,IAAtC4F,EAAS9F,GAAMC,GAAOC,GAAK0E,gBACtBkB,EAAS9F,GAAMC,GAAOC,GAEqB,IAA9C6F,OAAOC,KAAKF,EAAS9F,GAAMC,IAAQ2E,gBAC9BkB,EAAS9F,GAAMC,GAEqB,IAAvC8F,OAAOC,KAAKF,EAAS9F,IAAO4E,eACvBkB,EAAS9F,O,+BAYd,IAAD,EAC4E/B,KAAKV,MAAhFqD,EADD,EACCA,aAAcD,EADf,EACeA,cAAeD,EAD9B,EAC8BA,UAAWI,EADzC,EACyCA,UAAWnC,EADpD,EACoDA,aAAcwB,EADlE,EACkEA,MAEnEc,EAAUhD,KAAKuF,WAAW5C,EAAcD,GAE9C,OACE,yBAAK9B,GAAG,cACN,kBAAC,EAAD,CACEF,aAAcA,EACdwB,MAAOA,EACPzB,QAAST,KAAKS,QACdiB,WAAY1B,KAAK0B,aAEnB,kBAAC,EAAD,CACEiB,aAAcA,EACdD,cAAeA,EACfD,UAAWA,EACXI,UAAWA,EACXG,QAASA,EACTJ,iBAAkB5C,KAAK4C,iBACvBJ,iBAAkBxC,KAAKwC,iBACvBc,mBAAoBtD,KAAKsD,0B,GAjUKjC,a,MCCxC2G,IAASC,OACL,kBAAC,EAAD,MACA/C,SAASgD,eAAe,W","file":"static/js/main.b32006bf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class AddTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowAddField: false,\r\n            addTimeFrom: '',\r\n            addTimeTo: '',\r\n            addText: '',\r\n        };\r\n\r\n        this.toggleShowAddField = this.toggleShowAddField.bind(this);\r\n        this.handleInputsAddField = this.handleInputsAddField.bind(this);\r\n        this.cleanState = this.cleanState.bind(this);\r\n        this.handleAddButton = this.handleAddButton.bind(this);\r\n    };\r\n\r\n    toggleShowAddField() {\r\n        this.setState({\r\n            isShowAddField: !this.state.isShowAddField,\r\n        });\r\n    };\r\n\r\n    handleInputsAddField(nameInput, event) {\r\n        this._emptyTextError.classList.remove('show');\r\n    \r\n        this.setState({\r\n            [nameInput]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleAddButton() {\r\n        if (this.state.addText === '') {\r\n            this._emptyTextError.classList.add('show');\r\n            return;\r\n        };\r\n        this.props.addTask(this.props.selectedDate, this.state);\r\n        this.toggleShowAddField();\r\n        this.cleanState();\r\n    };\r\n\r\n    cleanState() {\r\n        this.setState({\r\n            isShowAddField: !this.state.isShowAddField,\r\n            addTimeFrom: '',\r\n            addTimeTo: '',\r\n            addText: '',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <div id=\"addTask\">\r\n            <div id=\"showTaskField\">\r\n                <button onClick={this.toggleShowAddField}>Добавить задачу <span>+</span></button>\r\n            </div>\r\n            <div id=\"addTaskField\" style={{maxHeight: this.state.isShowAddField ? '200px' : '0'}}>\r\n                <div id=\"taskTime\">\r\n                    Время: c <input \r\n                            type=\"text\" \r\n                            value={this.state.addTimeFrom} \r\n                            onChange={this.handleInputsAddField.bind(null, 'addTimeFrom')}\r\n                        /> \r\n                    до <input \r\n                            type=\"text\" \r\n                            value={this.state.addTimeTo}\r\n                            onChange={this.handleInputsAddField.bind(null, 'addTimeTo')} \r\n                        />\r\n                </div>\r\n                <div id=\"taskText\">\r\n                    Задача: <input \r\n                        type=\"text\"\r\n                        value={this.state.addText}\r\n                        onChange={this.handleInputsAddField.bind(null, 'addText')}\r\n                    />\r\n                </div>\r\n                <div id=\"errorEmptyText\" className=\"hidden\">\r\n                    <p ref={(dom) => this._emptyTextError = dom}>Введите название задачи</p>\r\n                </div>\r\n                <div id=\"taskControlButton\">\r\n                    <button onClick={this.handleAddButton}>Добавить</button>\r\n                    <button onClick={this.cleanState}>Отмена</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    };\r\n};","import React, { Component } from \"react\";\r\n\r\n\r\nexport default class TaskTablet extends Component {\r\n    render() {\r\n        const {text, timeFrom, timeTo} = this.props;\r\n        \r\n        return <li className=\"taskTablet\">\r\n            <div className=\"taskData\">\r\n                {timeFrom ? <p className=\"taskTime\">{`${timeFrom}-${timeTo}`}</p> : ''}\r\n                <p className=\"taskText\">{text}</p>\r\n            </div>\r\n            <div \r\n                className=\"taskDelete\"\r\n                onClick={this.props.removeTask.bind(null, this.props.selectedDate, this.props.idx)}\r\n            >\r\n                х\r\n            </div>\r\n        </li>\r\n    };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport AddTask from \"./addTask.js\";\r\nimport TaskTablet from \"./taskTablet.js\";\r\n\r\nexport default class Tasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getDate = this.getDate.bind(this);\r\n        this.getTaskTablets = this.getTaskTablets.bind(this);\r\n    };\r\n\r\n    getDate() {\r\n        const {year, month, day} = this.props.selectedDate;\r\n        return `${day}.${month > 9 ? month + 1 : '0' + (month + 1)}.${year}`;\r\n    };\r\n\r\n    getTaskTablets() {\r\n        const tasks = this.props.tasks;\r\n        const {year, month, day} = this.props.selectedDate;\r\n\r\n        if (!tasks[year] || !tasks[year][month] || !tasks[year][month][day]) {\r\n            return <li className=\"taskTablet\">\r\n                <div className=\"taskData\">\r\n                    <p className=\"taskText\">На <span>{this.getDate()}</span> нет задач</p>\r\n                </div>\r\n            </li>\r\n        } else {\r\n            return tasks[year][month][day].map((task, idx) => {\r\n                const {text, timeFrom, timeTo} = task\r\n                return <TaskTablet \r\n                    key={idx}\r\n                    idx={idx}\r\n                    text={text}\r\n                    timeFrom={timeFrom}\r\n                    timeTo={timeTo}\r\n                    removeTask = {this.props.removeTask}\r\n                    selectedDate = {this.props.selectedDate}\r\n                />\r\n            });\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return <section id=\"tasks\">\r\n            <div id=\"hiddenTasks\">\r\n                <div id=\"taskHeader\">\r\n                    <p>Задачи</p>\r\n                    <p>{this.getDate()}</p>\r\n                </div>\r\n                <AddTask \r\n                    selectedDate = {this.props.selectedDate}\r\n                    addTask = {this.props.addTask}\r\n                />\r\n                <ul id=\"taskTablets\">\r\n                    {this.getTaskTablets()}\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    };\r\n};","import React, { Component } from \"react\";\r\n\r\nexport default class MonthSwitcher extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nameOfMounth = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\r\n    };\r\n\r\n    render() {\r\n        return <div id=\"mounthSwithcer\">\r\n            <div className=\"switcher\" onClick={this.props.handlePrevUpdate}>\r\n                <span>&lt;</span>&ensp; \r\n                {this.nameOfMounth[this.props.prevMonth]}&ensp;\r\n                {this.props.selectedMonth === 0 ? this.props.selectedYear - 1 : ''}\r\n            </div>\r\n            <div id=\"selectedDate\">\r\n                <div>{this.nameOfMounth[this.props.selectedMonth]}</div>\r\n                <div>{this.props.selectedYear}</div>\r\n            </div>\r\n            <div className=\"switcher\" onClick={this.props.handleNextUpdate}>\r\n                {this.props.selectedMonth === 11 ? this.props.selectedYear + 1 : ''}&ensp;\r\n                {this.nameOfMounth[this.props.nextMonth]}&ensp; \r\n                <span>&gt;</span> \r\n            </div>\r\n        </div>\r\n    };\r\n};","import React, { Component } from \"react\";\r\n\r\nexport default class MonthDaysTablets extends Component {\r\n    constructor() {\r\n        super();\r\n        this.nameDaysOfWeek = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\r\n    };\r\n\r\n    getDaysTablets() {\r\n        return this.props.daysArr.map((elem, idx) => {\r\n            const {day, dayOfWeek, isActive, isSelectedDate, numberOfTasks} = elem;\r\n            \r\n            return <div \r\n                key={idx} \r\n                className={isActive ? (isSelectedDate ? 'selectedDate' : 'active') : 'notActive'}\r\n                onClick={isActive ?\r\n                    this.props.setNewSelectedDate.bind(null, this.props.selectedYear, this.props.selectedMonth, day) :\r\n                    (e) => e.preventDefault()\r\n                }\r\n            >\r\n                <p>{this.nameDaysOfWeek[dayOfWeek]}</p>\r\n                <p>{day}</p>\r\n                <p>{numberOfTasks ? `Задач: ${numberOfTasks}` : ''}</p>\r\n            </div> \r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <div id=\"mounthDays\">\r\n            {this.getDaysTablets()}\r\n        </div>\r\n    };\r\n};","import React, { Component } from \"react\";\r\nimport MonthSwitcher from \"./monthSwithcer\";\r\nimport MonthDaysTablets from \"./monthDaysTablets\";\r\n\r\nexport default class Calendar extends Component {\r\n    render() {\r\n        return <section id=\"calendar\">\r\n            <div id=\"hiddenCalendar\">\r\n                <MonthSwitcher \r\n                    selectedYear = {this.props.selectedYear}\r\n                    selectedMonth = {this.props.selectedMonth}\r\n                    prevMonth = {this.props.prevMonth}\r\n                    nextMonth = {this.props.nextMonth}\r\n                    handleNextUpdate = {this.props.handleNextUpdate}\r\n                    handlePrevUpdate = {this.props.handlePrevUpdate}\r\n                />\r\n                <MonthDaysTablets \r\n                    daysArr = {this.props.daysArr}\r\n                    selectedYear = {this.props.selectedYear}\r\n                    selectedMonth = {this.props.selectedMonth}\r\n                    setNewSelectedDate = {this.props.setNewSelectedDate}\r\n                />\r\n            </div>\r\n        </section>\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Tasks from './tasks/tasks';\r\nimport Calendar from './calendar/calendar';\r\n\r\nexport default class Organaizer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.date = new Date();\r\n    this.currentYear = this.date.getFullYear();\r\n    this.currentMonth = this.date.getMonth();\r\n    this.currentDay = this.date.getDate();\r\n    this.currentDayOfWeek = this.date.getDay();\r\n\r\n    this.state = {\r\n      selectedYear: this.currentYear,\r\n      selectedMonth: this.currentMonth,\r\n      prevMonth: this.getPrevMonth(this.currentMonth),\r\n      nextMonth: this.getNextMonth(this.currentMonth),\r\n      selectedDate: {\r\n        year: this.currentYear,\r\n        month: this.currentMonth,\r\n        day: this.currentDay,\r\n      },\r\n      tasks:\r\n        JSON.parse(localStorage.getItem('tasks')) === null\r\n          ? {}\r\n          : JSON.parse(localStorage.getItem('tasks')),\r\n    };\r\n\r\n    this.handleNextUpdate = this.handleNextUpdate.bind(this);\r\n    this.handlePrevUpdate = this.handlePrevUpdate.bind(this);\r\n    this.updateDateNext = this.updateDateNext.bind(this);\r\n    this.updateDatePrev = this.updateDatePrev.bind(this);\r\n    this.isSelectedDate = this.isSelectedDate.bind(this);\r\n    this.setNewSelectedDate = this.setNewSelectedDate.bind(this);\r\n    this.addTask = this.addTask.bind(this);\r\n    this.removeTask = this.removeTask.bind(this);\r\n\r\n    window.addEventListener('unload', () => {\r\n      localStorage.setItem('tasks', JSON.stringify(this.state.tasks));\r\n    });\r\n  }\r\n\r\n  handleNextUpdate() {\r\n    const hiddenCalendar = document.querySelector('#hiddenCalendar');\r\n    hiddenCalendar.style.opacity = 0;\r\n    setTimeout(() => {\r\n      this.updateDateNext();\r\n      setTimeout(() => {\r\n        hiddenCalendar.style.opacity = 1;\r\n      }, 300);\r\n    }, 300);\r\n  }\r\n\r\n  handlePrevUpdate() {\r\n    const hiddenCalendar = document.querySelector('#hiddenCalendar');\r\n    hiddenCalendar.style.opacity = 0;\r\n    setTimeout(() => {\r\n      this.updateDatePrev();\r\n      setTimeout(() => {\r\n        hiddenCalendar.style.opacity = 1;\r\n      }, 300);\r\n    }, 300);\r\n  }\r\n\r\n  updateDateNext() {\r\n    const selectedYear = this.getNextYear(this.state.selectedYear, this.state.selectedMonth);\r\n    const selectedMonth = this.getNextMonth(this.state.selectedMonth);\r\n\r\n    this.setState({\r\n      selectedYear: selectedYear,\r\n      selectedMonth: selectedMonth,\r\n      prevMonth: this.getPrevMonth(selectedMonth),\r\n      nextMonth: this.getNextMonth(selectedMonth),\r\n      daysArr: this.getDaysArr(selectedYear, selectedMonth),\r\n    });\r\n  }\r\n\r\n  updateDatePrev() {\r\n    const selectedYear = this.getPrevYear(this.state.selectedYear, this.state.selectedMonth);\r\n    const selectedMonth = this.getPrevMonth(this.state.selectedMonth);\r\n\r\n    this.setState({\r\n      selectedYear: selectedYear,\r\n      selectedMonth: selectedMonth,\r\n      prevMonth: this.getPrevMonth(selectedMonth),\r\n      nextMonth: this.getNextMonth(selectedMonth),\r\n      daysArr: this.getDaysArr(selectedYear, selectedMonth),\r\n    });\r\n  }\r\n\r\n  getPrevYear(selectedYear, selectedMonth) {\r\n    return selectedMonth === 0 ? selectedYear - 1 : selectedYear;\r\n  }\r\n\r\n  getNextYear(selectedYear, selectedMonth) {\r\n    return selectedMonth === 11 ? selectedYear + 1 : selectedYear;\r\n  }\r\n\r\n  getPrevMonth(selectedMonth) {\r\n    return selectedMonth === 0 ? 11 : selectedMonth - 1;\r\n  }\r\n\r\n  getNextMonth(selectedMonth) {\r\n    return selectedMonth === 11 ? 0 : selectedMonth + 1;\r\n  }\r\n\r\n  getDaysArr(selectedYear, selectedMonth) {\r\n    const numOfDays = this.getNumOfDays(selectedYear, selectedMonth);\r\n\r\n    return [\r\n      ...this.getDatePrevMonth(selectedYear, selectedMonth),\r\n      ...this.getDateSelectedMonth(selectedYear, selectedMonth, numOfDays),\r\n      ...this.getDateNextMonth(selectedYear, selectedMonth, numOfDays),\r\n    ];\r\n  }\r\n\r\n  getNumOfDays(selectedYear, selectedMonth) {\r\n    return new Date(selectedYear, selectedMonth + 1, 0).getDate();\r\n  }\r\n\r\n  getDayOfWeek(selectedYear, selectedMonth, selectedDate) {\r\n    return new Date(selectedYear, selectedMonth, selectedDate).getDay();\r\n  }\r\n\r\n  getDateSelectedMonth(selectedYear, selectedMonth, numOfDays) {\r\n    let arr = [];\r\n\r\n    for (let date = 1; date <= numOfDays; date++) {\r\n      arr.push({\r\n        day: date,\r\n        dayOfWeek: this.getDayOfWeek(selectedYear, selectedMonth, date),\r\n        isActive: true,\r\n        isSelectedDate: this.isSelectedDate(selectedYear, selectedMonth, date),\r\n        numberOfTasks: this.getNumberOfTasks(selectedYear, selectedMonth, date),\r\n      });\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  getDatePrevMonth(selectedYear, selectedMonth) {\r\n    const numFirstDay = new Date(selectedYear, selectedMonth, 1).getDay();\r\n    const lastDayOfPrevMonth = new Date(selectedYear, selectedMonth, 0).getDate();\r\n\r\n    //Если первый день воскресенье, то принудително, в разницу между днями недели, пишем семь дней\r\n    const deltaDays = lastDayOfPrevMonth - (numFirstDay === 0 ? 7 : numFirstDay) + 1;\r\n    let arr = [];\r\n\r\n    for (let date = lastDayOfPrevMonth; date > deltaDays; date--) {\r\n      arr.push({\r\n        day: date,\r\n        dayOfWeek: this.getDayOfWeek(\r\n          this.getPrevYear(selectedYear, selectedMonth),\r\n          this.getPrevMonth(selectedMonth),\r\n          date\r\n        ),\r\n        isActive: false,\r\n        isSelectedDate: false,\r\n        numberOfTasks: this.getNumberOfTasks(\r\n          this.getPrevYear(selectedYear, selectedMonth),\r\n          this.getPrevMonth(selectedMonth),\r\n          date\r\n        ),\r\n      });\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n  getDateNextMonth(selectedYear, selectedMonth, numOfDays) {\r\n    const numLastDay = new Date(selectedYear, selectedMonth, numOfDays).getDay();\r\n\r\n    //Если последний день воскресенье, то принудително, в разницу между днями недели, пишем ноль дней\r\n    const deltaDays = numLastDay === 0 ? 0 : 7 - numLastDay;\r\n    let arr = [];\r\n\r\n    for (let date = 1; date <= deltaDays; date++) {\r\n      arr.push({\r\n        day: date,\r\n        dayOfWeek: this.getDayOfWeek(\r\n          this.getNextYear(selectedYear, selectedMonth),\r\n          this.getNextMonth(selectedMonth),\r\n          date\r\n        ),\r\n        isActive: false,\r\n        isSelectedDate: false,\r\n        numberOfTasks: this.getNumberOfTasks(\r\n          this.getNextYear(selectedYear, selectedMonth),\r\n          this.getNextMonth(selectedMonth),\r\n          date\r\n        ),\r\n      });\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  isSelectedDate(year, month, day) {\r\n    const { year: y, month: m, day: d } = this.state.selectedDate;\r\n    return year === y && month === m && day === d;\r\n  }\r\n\r\n  setNewSelectedDate(year, month, day) {\r\n    const hiddenTasks = document.querySelector('#hiddenTasks');\r\n    hiddenTasks.style.opacity = 0;\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        selectedDate: { year, month, day },\r\n      });\r\n\r\n      setTimeout(() => {\r\n        hiddenTasks.style.opacity = 1;\r\n      }, 300);\r\n    }, 300);\r\n  }\r\n\r\n  getNumberOfTasks(year, month, day) {\r\n    const tasks = this.state.tasks;\r\n\r\n    if (!tasks[year] || !tasks[year][month] || !tasks[year][month][day]) return null;\r\n\r\n    return tasks[year][month][day].length;\r\n  }\r\n\r\n  addTask({ year, month, day }, { addText, addTimeFrom, addTimeTo }) {\r\n    let newTasks = JSON.parse(JSON.stringify(this.state.tasks));\r\n\r\n    let data = this.returnDateExist(newTasks, year, month, day);\r\n    const taskData = {\r\n      text: addText,\r\n      timeFrom: addTimeFrom,\r\n      timeTo: addTimeTo,\r\n    };\r\n\r\n    data.push(taskData);\r\n    data.sort(this.sortOnTimeFrom);\r\n\r\n    this.setState({\r\n      tasks: newTasks,\r\n    });\r\n  }\r\n\r\n  returnDateExist(tasksObj, year, month, day) {\r\n    if (tasksObj[year] === undefined) {\r\n      tasksObj[year] = {\r\n        [month]: {\r\n          [day]: [],\r\n        },\r\n      };\r\n    } else if (tasksObj[year][month] === undefined) {\r\n      tasksObj[year][month] = {\r\n        [day]: [],\r\n      };\r\n    } else if (tasksObj[year][month][day] === undefined) {\r\n      tasksObj[year][month][day] = [];\r\n    }\r\n\r\n    return tasksObj[year][month][day];\r\n  }\r\n\r\n  sortOnTimeFrom(a, b) {\r\n    const [aHours, aMinutes] = a.timeFrom.split(':');\r\n    const [bHours, bMinutes] = b.timeFrom.split(':');\r\n\r\n    if (+aHours === +bHours) {\r\n      return aMinutes - bMinutes;\r\n    } else {\r\n      return aHours - bHours;\r\n    }\r\n  }\r\n\r\n  removeTask({ year, month, day }, idx) {\r\n    let newTasks = JSON.parse(JSON.stringify(this.state.tasks));\r\n\r\n    newTasks[year][month][day].splice(idx, 1);\r\n    this.deleteEmptyTasks(newTasks, year, month, day);\r\n\r\n    this.setState({\r\n      tasks: newTasks,\r\n    });\r\n  }\r\n\r\n  deleteEmptyTasks(objTasks, year, month, day) {\r\n    if (objTasks[year][month][day].length === 0) {\r\n      delete objTasks[year][month][day];\r\n\r\n      if (Object.keys(objTasks[year][month]).length === 0) {\r\n        delete objTasks[year][month];\r\n\r\n        if (Object.keys(objTasks[year]).length === 0) {\r\n          delete objTasks[year];\r\n        } else {\r\n          return;\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedYear, selectedMonth, prevMonth, nextMonth, selectedDate, tasks } = this.state;\r\n\r\n    const daysArr = this.getDaysArr(selectedYear, selectedMonth);\r\n\r\n    return (\r\n      <div id='organaizer'>\r\n        <Tasks\r\n          selectedDate={selectedDate}\r\n          tasks={tasks}\r\n          addTask={this.addTask}\r\n          removeTask={this.removeTask}\r\n        />\r\n        <Calendar\r\n          selectedYear={selectedYear}\r\n          selectedMonth={selectedMonth}\r\n          prevMonth={prevMonth}\r\n          nextMonth={nextMonth}\r\n          daysArr={daysArr}\r\n          handleNextUpdate={this.handleNextUpdate}\r\n          handlePrevUpdate={this.handlePrevUpdate}\r\n          setNewSelectedDate={this.setNewSelectedDate}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Organaizer from './organaizer.js';\nimport './css/index.css';\n\nReactDOM.render(\n    <Organaizer />, \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}